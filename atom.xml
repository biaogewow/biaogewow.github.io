<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-24T13:41:16.197Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jiangBiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jQuery选择器</title>
    <link href="http://yoursite.com/2016/04/24/jQuery%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://yoursite.com/2016/04/24/jQuery选择器/</id>
    <published>2016-04-24T13:04:16.000Z</published>
    <updated>2016-04-24T13:41:16.197Z</updated>
    
    <content type="html">&lt;h2 id=&quot;jQuery的选择器&quot;&gt;&lt;a href=&quot;#jQuery的选择器&quot; class=&quot;headerlink&quot; title=&quot;jQuery的选择器&quot;&gt;&lt;/a&gt;jQuery的选择器&lt;/h2&gt;&lt;h3 id=&quot;基本内容&quot;&gt;&lt;a href=&quot;#基本内容&quot; class=&quot;headerlink&quot; title=&quot;基本内容&quot;&gt;&lt;/a&gt;基本内容&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注：jQuery中的选择器源于CSS中的选择器，并进行扩展,jQuery中的选择器是jQuery的根基&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;选择器分类&quot;&gt;&lt;a href=&quot;#选择器分类&quot; class=&quot;headerlink&quot; title=&quot;选择器分类&quot;&gt;&lt;/a&gt;选择器分类&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;一、 基本选择器  
    * ID选择器  #id值
    * 元素选择器  element
    * class选择器 .className
    * 通配符选择器  * (匹配当前HTML页面的所有元素)
    * 组合选择器  seletor1,selector2,...

二、层级选择器
    * 祖先 空格 后代
    * 父元素 &amp;gt; 子元素
    * 目标元素 + 下一个兄弟元素
    * 目标元素 ~ 后面所有兄弟元素

三、过滤选择器 （注：在所有的过滤选择器前，需要增加&amp;quot;:&amp;quot;）
 1、 基本过滤选择器
    * :first - 匹配第一个
    * first()函数
    * :last - 匹配最后一个
    * last()函数
    * :not() - 匹配指定规则之外
    * :even - 匹配偶数 从0开始
    * :odd - 匹配奇数
    * :eq() - 索引值等于
    * 索引值从 0 开始
    * :gt() - 索引值大于
    * :lt() - 索引值小于
    * :header - 匹配h1h2h3h4h5h6标题
    * :animated - 匹配动画（只能匹配jQuery实现的动画效果）

 2、子元素过滤选择器
    * :nth-child() （注：从1开始）
    * :first-child
    * :last-child
    * :only-child - 只有一个子元素

 3、 可见性过滤选择器
    * :hidden - 匹配隐藏元素
    * :visible - 匹配可见元素

 4、 属性过滤选择器
    * [attrName]
    * [attrName=value]
    * [attrName!=value]
    * [attrName^=value]
    * [attrName$=value]
    * [attrName*=value]
    * [][][]（组合）

 5、内容过滤选择器
    * :contains(text) - 含有指定文本的元素
    * :empty - 不包含子元素或文本元素的元素
    * :parent - 包含子元素或文本元素的元素
    * :has(selector) - 包含匹配selector的父元素

 6、表单对象属性过滤选择器
    * :enabled
    * :disabled
    * :checked
    * :selected

 7、表单选择器
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;jQuery的选择器&quot;&gt;&lt;a href=&quot;#jQuery的选择器&quot; class=&quot;headerlink&quot; title=&quot;jQuery的选择器&quot;&gt;&lt;/a&gt;jQuery的选择器&lt;/h2&gt;&lt;h3 id=&quot;基本内容&quot;&gt;&lt;a href=&quot;#基本内容&quot; class=&quot;head
    
    </summary>
    
    
      <category term="jQuery选择器" scheme="http://yoursite.com/tags/jQuery%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>jQuery中的隐式迭代--each()用法</title>
    <link href="http://yoursite.com/2016/04/24/each/"/>
    <id>http://yoursite.com/2016/04/24/each/</id>
    <published>2016-04-24T03:30:04.000Z</published>
    <updated>2016-04-24T13:58:13.423Z</updated>
    
    <content type="html">&lt;h3 id=&quot;隐式迭代-只关注迭代的开始和结束-不关注迭代过程&quot;&gt;&lt;a href=&quot;#隐式迭代-只关注迭代的开始和结束-不关注迭代过程&quot; class=&quot;headerlink&quot; title=&quot;隐式迭代 - 只关注迭代的开始和结束,不关注迭代过程&quot;&gt;&lt;/a&gt;隐式迭代 - 只关注迭代的开始和结束,不关注迭代过程&lt;/h3&gt;&lt;h4 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;$(selector).each(callback) (jQuery)对象方法&lt;/li&gt;
&lt;li&gt;$.each(obj,callback) (jQuery)全局函数&lt;ul&gt;
&lt;li&gt;callback 回调函数,function(index,domEle){}&lt;/li&gt;
&lt;li&gt;index 遍历过程中的索引值    &lt;/li&gt;
&lt;li&gt;domEle 遍历得到的每个DOM对象(元素)&lt;/li&gt;
&lt;li&gt;obj 需要遍历的对象或数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;$(&amp;quot;ul&amp;gt;li&amp;quot;).each(function(index,domEle){
        if(index%2==0){
        domEle.style.backgroundColor=&amp;quot;skyblue&amp;quot;;
        }
    })

将li中索引值为偶数的颜色变为天蓝（偶数从0开始）
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;隐式迭代-只关注迭代的开始和结束-不关注迭代过程&quot;&gt;&lt;a href=&quot;#隐式迭代-只关注迭代的开始和结束-不关注迭代过程&quot; class=&quot;headerlink&quot; title=&quot;隐式迭代 - 只关注迭代的开始和结束,不关注迭代过程&quot;&gt;&lt;/a&gt;隐式迭代 - 只关注迭代
    
    </summary>
    
      <category term="each()" scheme="http://yoursite.com/categories/each/"/>
    
    
      <category term="each()" scheme="http://yoursite.com/tags/each/"/>
    
  </entry>
  
  <entry>
    <title>ready()与onload的区别</title>
    <link href="http://yoursite.com/2016/04/15/ready/"/>
    <id>http://yoursite.com/2016/04/15/ready/</id>
    <published>2016-04-15T14:12:38.586Z</published>
    <updated>2016-04-24T07:11:01.256Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-onload没有简写形式-ready具有简写形式，简写形式如下&quot;&gt;&lt;a href=&quot;#1-onload没有简写形式-ready具有简写形式，简写形式如下&quot; class=&quot;headerlink&quot; title=&quot;1.onload没有简写形式,ready具有简写形式，简写形式如下:&quot;&gt;&lt;/a&gt;1.onload没有简写形式,ready具有简写形式，简写形式如下:&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;$(document).ready(function(){})   
$().ready(function(){}) 
$(function(){})
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2-nbsp-onload必须等待HTML页面中所有内部都加载完毕后才执行；ready是等待DOM节点树的内容加载完毕后就执行&quot;&gt;&lt;a href=&quot;#2-nbsp-onload必须等待HTML页面中所有内部都加载完毕后才执行；ready是等待DOM节点树的内容加载完毕后就执行&quot; class=&quot;headerlink&quot; title=&quot;2.&amp;nbsp;onload必须等待HTML页面中所有内部都加载完毕后才执行；ready是等待DOM节点树的内容加载完毕后就执行&quot;&gt;&lt;/a&gt;2.&amp;nbsp;onload必须等待HTML页面中所有内部都加载完毕后才执行；ready是等待DOM节点树的内容加载完毕后就执行&lt;/h3&gt;&lt;h3 id=&quot;3-nbsp-一个HTML页面只能编写一个onload；但是一个HTML页面允许编写多个ready&quot;&gt;&lt;a href=&quot;#3-nbsp-一个HTML页面只能编写一个onload；但是一个HTML页面允许编写多个ready&quot; class=&quot;headerlink&quot; title=&quot;3.&amp;nbsp;一个HTML页面只能编写一个onload；但是一个HTML页面允许编写多个ready&quot;&gt;&lt;/a&gt;3.&amp;nbsp;一个HTML页面只能编写一个onload；但是一个HTML页面允许编写多个ready&lt;/h3&gt;&lt;h3 id=&quot;注：可以利用此制作页面加载转圈效果&quot;&gt;&lt;a href=&quot;#注：可以利用此制作页面加载转圈效果&quot; class=&quot;headerlink&quot; title=&quot;注：可以利用此制作页面加载转圈效果&quot;&gt;&lt;/a&gt;注：可以利用此制作页面加载转圈效果&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-onload没有简写形式-ready具有简写形式，简写形式如下&quot;&gt;&lt;a href=&quot;#1-onload没有简写形式-ready具有简写形式，简写形式如下&quot; class=&quot;headerlink&quot; title=&quot;1.onload没有简写形式,ready具有简写形式
    
    </summary>
    
    
      <category term="read()" scheme="http://yoursite.com/tags/read/"/>
    
  </entry>
  
</feed>
